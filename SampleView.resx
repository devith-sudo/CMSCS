<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="txtSearch.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAAA1pJREFUWEfVmS9MVVEcxw0EA8HgnEM23gabBgMbuulgk2DQifNtzhl004YbwU0D
        gYCbwUgwGAgEwwsEAuEFg4FAMBAMBAKBQCAQXiC88Px8t99lv3fuu//eu5cn3+278c7v7/2dc37n3MuV
        Ihgbr43efzj/eunTlx9wFx7DjvEE7sEGOovwlplVD4JNEngDnsEooSy2YRPbR+amfKhi9VfvVS0F65VE
        XjbxNWFuywFPPoPjgyBQxBZskvwaeqsif39jbBP6afc8ReeZuR8MOJrFoZIIg2jKFqjGiKn2BDoP0NWS
        iFUe3x9NrT8kJHdA0HlTyQ1s7mD7O/ClJBdNpRiozDgOtBu9wy2tRVMpDFWbhL4GPtskP2sq+YHhr8DR
        ZtZ05oWmNvB9VOjBcaD+5h38KSu5CMRY9zFUWRNlA4O/zviMKZgyUWngga/i23eGFmPXTJwMknnsjPRk
        qyYqHcSqB7E+mygZKP50Rm2e6qaJKgEx9l28PRtOBkq+uW7bcGWgaisuXoeqJhcE4Y1AebBGmgPEUCP3
        MesmigOhjjSvPGeiymCbxcdMXocInwfKNRNVCmKdL6vUdjPEBA9d3A0bjoOEnjrFi0zw/EglZnJbQ3g3
        UjTlJyaqDGrOQczkjYmwS5n1sGyiyqAi+Jj8XjBRb6DkG+eODVcGirDm4nUyj7vQgCcq/RyOYC3GHwzZ
        BSGhaWcgJu+qAUExuq5d/F4yUTpQ7rr5knTxC2UGdMbj+9TFOVFFTZwOEuo6fqAulKVdGvA1gs+uC3Hu
        6kXASK+YPsldHGff1zJgyemNz/sufiHGYBRDf3EV9xmfNJXC0APiYzvwecp4fxsRQ62T8N22xXQsI8u3
        XgzYvMH2KPClqX1nKv2BRPS66HtjxGOc60X9tqnGgGwCHe3UcCY8j9GbMZP+QJLXcdQMHHvqLN2BDaj1
        pS4Qq1YKNSuDdwqcvMVZ0ueMPNQnj2Wo957wg0A5SWrt4UjTps9rPkAaD7FZ0Zo2N3rYOcZ7JfnCVAYH
        a2cKfsDxd6gloKkVtVPXJYPTph4DsnvohTPSJsmXpjJ82Ca8lEmqBVX+0pYbJKmPVbF29r8lqYPhUiQZ
        6xDaUKYyfJCk7gFq/D7B9FeBi4YluQX134TG2Hht5B/nnrvQs4JCAwAAAABJRU5ErkJggg==
</value>
  </data>
</root>